<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/liu_lab/feed.xml" rel="self" type="application/atom+xml" /><link href="/liu_lab/" rel="alternate" type="text/html" /><updated>2024-03-01T15:48:30+00:00</updated><id>/liu_lab/feed.xml</id><title type="html">maggie4apple</title><subtitle>An engaging 1-3 sentence description of your lab.</subtitle><entry><title type="html">Learning eeg</title><link href="/liu_lab/2024/02/28/Learning-EEG.html" rel="alternate" type="text/html" title="Learning eeg" /><published>2024-02-28T00:00:00+00:00</published><updated>2024-03-01T15:34:52+00:00</updated><id>/liu_lab/2024/02/28/Learning%20EEG</id><content type="html" xml:base="/liu_lab/2024/02/28/Learning-EEG.html"><![CDATA[<h1 id="eeg-tutorial">EEG Tutorial</h1>
<ol>
  <li>
    <p>Where do we start:
<a href="https://eeglab.org/tutorials/">EEGLAB Tutorial</a></p>
  </li>
  <li>
    <p>A clean/resting state human EEG dataset to test your rejection:
R:\Ferris-Lab\liu.chang1\DATA\SampleData\2019-12-19_humanExampleData\Raw</p>
  </li>
  <li>
    <p>Downey et al. 2023: iCanClean to remove motion artifacts with the dual-layer electrode design
<a href="https://www.mdpi.com/1424-8220/23/19/8214">Paper on iCanClean</a></p>
  </li>
</ol>

<h2 id="some-useful-code-blocks">Some useful code blocks</h2>
<p>High-pass filter at 1Hz</p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">EEG</span> <span class="o">=</span> <span class="n">pop_eegfiltnew</span><span class="p">(</span><span class="n">EEG</span><span class="p">,</span> <span class="s1">'locutoff'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s1">'chantype'</span><span class="p">,{</span><span class="s1">'EEG'</span> <span class="s1">'EMG'</span> <span class="s1">'Noise'</span><span class="p">});</span>
</code></pre></div></div>

<p>Keep only a subset of chans</p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">EEG_chans</span> <span class="o">=</span> <span class="nb">find</span><span class="p">(</span><span class="nb">strcmpi</span><span class="p">(</span><span class="s1">'EEG'</span><span class="p">,{</span><span class="n">EEG</span><span class="o">.</span><span class="n">chanlocs</span><span class="o">.</span><span class="nb">type</span><span class="p">}));</span> <span class="c1">%define channels</span>
<span class="n">EMG_chans</span> <span class="o">=</span> <span class="nb">find</span><span class="p">(</span><span class="nb">strcmpi</span><span class="p">(</span><span class="s1">'EMG'</span><span class="p">,{</span><span class="n">EEG</span><span class="o">.</span><span class="n">chanlocs</span><span class="o">.</span><span class="nb">type</span><span class="p">}));</span>
<span class="n">Noise_chans</span> <span class="o">=</span> <span class="nb">find</span><span class="p">(</span><span class="nb">strcmpi</span><span class="p">(</span><span class="s1">'Noise'</span><span class="p">,{</span><span class="n">EEG</span><span class="o">.</span><span class="n">chanlocs</span><span class="o">.</span><span class="nb">type</span><span class="p">}));</span>

<span class="n">EEG</span> <span class="o">=</span> <span class="n">pop_select</span><span class="p">(</span> <span class="n">EEG</span><span class="p">,</span> <span class="s1">'channel'</span><span class="p">,</span> <span class="nb">sort</span><span class="p">([</span><span class="n">EEG_chans</span><span class="p">,</span> <span class="n">EMG_chans</span><span class="p">,</span><span class="n">Noise_chans</span><span class="p">]));</span> <span class="c1">%select subset of channels</span>
<span class="n">EEG</span> <span class="o">=</span> <span class="n">pop_select</span><span class="p">(</span> <span class="n">EEG</span><span class="p">,</span> <span class="s1">'channel'</span><span class="p">,</span> <span class="nb">sort</span><span class="p">([</span><span class="n">EEG_chans</span><span class="p">]));</span> <span class="c1">%select just EEG channels</span>

<span class="c1">%update channel labels again just in case</span>
<span class="n">EEG_chans</span> <span class="o">=</span> <span class="nb">find</span><span class="p">(</span><span class="nb">strcmpi</span><span class="p">(</span><span class="s1">'EEG'</span><span class="p">,{</span><span class="n">EEG</span><span class="o">.</span><span class="n">chanlocs</span><span class="o">.</span><span class="nb">type</span><span class="p">}));</span> 
<span class="n">EMG_chans</span> <span class="o">=</span> <span class="nb">find</span><span class="p">(</span><span class="nb">strcmpi</span><span class="p">(</span><span class="s1">'EMG'</span><span class="p">,{</span><span class="n">EEG</span><span class="o">.</span><span class="n">chanlocs</span><span class="o">.</span><span class="nb">type</span><span class="p">}));</span>
<span class="n">Noise_chans</span> <span class="o">=</span> <span class="nb">find</span><span class="p">(</span><span class="nb">strcmpi</span><span class="p">(</span><span class="s1">'Noise'</span><span class="p">,{</span><span class="n">EEG</span><span class="o">.</span><span class="n">chanlocs</span><span class="o">.</span><span class="nb">type</span><span class="p">}));</span>
</code></pre></div></div>

<p>Re-reference and do cleanline</p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">EEG</span> <span class="o">=</span> <span class="n">rerefC2CN2NExt2Ext_func</span><span class="p">(</span><span class="n">EEG</span><span class="p">,</span><span class="n">fullRankAvRefBool</span><span class="p">);</span>
<span class="n">EEG</span> <span class="o">=</span> <span class="n">pop_cleanline</span><span class="p">(</span><span class="n">EEG</span><span class="p">,</span> <span class="s1">'bandwidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="s1">'chanlist'</span><span class="p">,[</span><span class="n">EEG_chans</span> <span class="n">EMG_chans</span> <span class="n">Noise_chans</span><span class="p">],</span><span class="s1">'computepower'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="k">...</span>
    <span class="s1">'linefreqs'</span><span class="p">,[</span><span class="mi">60</span> <span class="mi">120</span><span class="p">],</span><span class="s1">'newversion'</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s1">'normSpectrum'</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s1">'p'</span><span class="p">,</span><span class="mf">0.01</span><span class="p">,</span><span class="s1">'pad'</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="s1">'plotfigures'</span><span class="p">,</span><span class="k">...</span>
<span class="mi">0</span><span class="p">,</span><span class="s1">'scanforlines'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s1">'sigtype'</span><span class="p">,</span><span class="s1">'Channels'</span><span class="p">,</span><span class="s1">'taperbandwidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="s1">'tau'</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="s1">'verb'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s1">'winsize'</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="s1">'winstep'</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="useful-preprocessing-code-block">Useful preprocessing code block</h2>
<p>Step 1: Remove bad channels based on standard deviation and kurtosis
<a href="https://github.com/changliu-99/Reference-code/blob/37ebdabc514e624424b7473eb1a317b228b44f14/EEG/Preprocessing/autoRejCh_func_CL.m">auto_rejection_code</a></p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">EEG</span> <span class="o">=</span> <span class="n">autoRejCh_func_CL</span><span class="p">(</span><span class="n">EEG</span><span class="p">,</span><span class="n">threshold</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[EEG Tutorial Where do we start: EEGLAB Tutorial A clean/resting state human EEG dataset to test your rejection: R:\Ferris-Lab\liu.chang1\DATA\SampleData\2019-12-19_humanExampleData\Raw Downey et al. 2023: iCanClean to remove motion artifacts with the dual-layer electrode design Paper on iCanClean Some useful code blocks High-pass filter at 1Hz EEG = pop_eegfiltnew(EEG, 'locutoff',1,'chantype',{'EEG' 'EMG' 'Noise'});]]></summary></entry><entry><title type="html">Statistical Analysis Tutorial/Useful links</title><link href="/liu_lab/2024/02/08/Stats-tutorial.html" rel="alternate" type="text/html" title="Statistical Analysis Tutorial/Useful links" /><published>2024-02-08T00:00:00+00:00</published><updated>2024-03-01T15:34:52+00:00</updated><id>/liu_lab/2024/02/08/Stats-tutorial</id><content type="html" xml:base="/liu_lab/2024/02/08/Stats-tutorial.html"><![CDATA[<p>Useful links:
https://rpsychologist.com/cohend/</p>]]></content><author><name>Chang Liu</name></author><category term="statistics" /><summary type="html"><![CDATA[Useful links: https://rpsychologist.com/cohend/]]></summary></entry></feed>